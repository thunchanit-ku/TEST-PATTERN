import React, { useState } from 'react';
import { Heart, MessageCircle, Share2, Plus, Smile, ThumbsUp } from 'lucide-react';
import './CommunityBoard.css';

const CommunityBoard = () => {
  const [newPost, setNewPost] = useState('');
  const [posts, setPosts] = useState([
    {
      id: 1,
      author: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ A',
      avatar: 'üòä',
      content: '‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà AI ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏°‡∏≤‡∏Å! ‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÉ‡∏à‡∏™‡∏á‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏•‡∏¢',
      timestamp: '2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      likes: 12,
      comments: 3,
      emotion: 'Happy',
      activity: '‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞'
    },
    {
      id: 2,
      author: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ B',
      avatar: 'üé®',
      content: '‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏†‡∏π‡∏°‡∏¥‡πÉ‡∏à‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏°‡∏≤‡∏Å! ‡∏®‡∏¥‡∏•‡∏õ‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏¢‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á‡πÜ',
      timestamp: '4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      likes: 8,
      comments: 1,
      emotion: 'Neutral',
      activity: '‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏™‡∏µ'
    },
    {
      id: 3,
      author: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ C',
      avatar: 'üßò‚Äç‚ôÄÔ∏è',
      content: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡∏°‡∏≤‡∏Å ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏∂‡∏Å‡πÜ ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏•‡∏¢ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì AI ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ',
      timestamp: '1 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      likes: 15,
      comments: 5,
      emotion: 'Angry',
      activity: '‡∏ù‡∏∂‡∏Å‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏∂‡∏Å‡πÜ'
    },
    {
      id: 4,
      author: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ D',
      avatar: 'üìö',
      content: '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢‡∏°‡∏≤‡∏Å ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å',
      timestamp: '2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      likes: 6,
      comments: 2,
      emotion: 'Neutral',
      activity: '‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à'
    },
    {
      id: 5,
      author: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ E',
      avatar: 'üèÉ‚Äç‚ôÇÔ∏è',
      content: '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å‡πÜ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÇ‡∏Å‡∏£‡∏ò ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å! ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏•‡∏ö‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏ß‡∏Å',
      timestamp: '3 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
      likes: 20,
      comments: 7,
      emotion: 'Angry',
      activity: '‡∏ß‡∏¥‡πà‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏Å'
    }
  ]);

  const [likedPosts, setLikedPosts] = useState(new Set());

  const handleLike = (postId) => {
    setLikedPosts(prev => {
      const newLiked = new Set(prev);
      if (newLiked.has(postId)) {
        newLiked.delete(postId);
        setPosts(prevPosts => 
          prevPosts.map(post => 
            post.id === postId ? { ...post, likes: post.likes - 1 } : post
          )
        );
      } else {
        newLiked.add(postId);
        setPosts(prevPosts => 
          prevPosts.map(post => 
            post.id === postId ? { ...post, likes: post.likes + 1 } : post
          )
        );
      }
      return newLiked;
    });
  };

  const handleSubmitPost = (e) => {
    e.preventDefault();
    if (newPost.trim()) {
      const post = {
        id: posts.length + 1,
        author: '‡∏Ñ‡∏∏‡∏ì',
        avatar: 'üë§',
        content: newPost,
        timestamp: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà',
        likes: 0,
        comments: 0,
        emotion: 'Neutral',
        activity: '‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å'
      };
      setPosts(prev => [post, ...prev]);
      setNewPost('');
    }
  };

  const getEmotionColor = (emotion) => {
    const colors = {
      Happy: '#10B981',
      Sad: '#3B82F6',
      Angry: '#EF4444',
      Surprised: '#F59E0B',
      Fearful: '#8B5CF6',
      Disgusted: '#6B7280',
      Neutral: '#6B7280'
    };
    return colors[emotion] || '#6B7280';
  };

  return (
    <div className="community-board">
      <div className="board-header">
        <h2>‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏™‡πà‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à</h2>
        <p>‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏±‡∏ô</p>
      </div>

      <div className="create-post">
        <form onSubmit={handleSubmitPost} className="post-form">
          <div className="form-header">
            <span className="user-avatar">üë§</span>
            <span className="user-name">‡∏Ñ‡∏∏‡∏ì</span>
          </div>
          <textarea
            value={newPost}
            onChange={(e) => setNewPost(e.target.value)}
            placeholder="‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏±‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ MAI Mood Coach..."
            className="post-input"
            rows="3"
          />
          <div className="form-actions">
            <button type="submit" className="submit-btn" disabled={!newPost.trim()}>
              <Plus className="btn-icon" />
              ‡πÅ‡∏ä‡∏£‡πå‡πÇ‡∏û‡∏™‡∏ï‡πå
            </button>
          </div>
        </form>
      </div>

      <div className="posts-container">
        {posts.map(post => (
          <div key={post.id} className="post-card">
            <div className="post-header">
              <div className="author-info">
                <span className="author-avatar">{post.avatar}</span>
                <div className="author-details">
                  <span className="author-name">{post.author}</span>
                  <span className="post-timestamp">{post.timestamp}</span>
                </div>
              </div>
              <div className="post-meta">
                <span 
                  className="emotion-tag"
                  style={{ backgroundColor: getEmotionColor(post.emotion) }}
                >
                  {post.emotion}
                </span>
              </div>
            </div>

            <div className="post-content">
              <p>{post.content}</p>
              {post.activity && (
                <div className="activity-tag">
                  <span className="activity-label">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°:</span>
                  <span className="activity-name">{post.activity}</span>
                </div>
              )}
            </div>

            <div className="post-actions">
              <button 
                className={`action-btn like-btn ${likedPosts.has(post.id) ? 'liked' : ''}`}
                onClick={() => handleLike(post.id)}
              >
                <ThumbsUp className="action-icon" />
                <span>{post.likes}</span>
              </button>
              
              <button className="action-btn comment-btn">
                <MessageCircle className="action-icon" />
                <span>{post.comments}</span>
              </button>
              
              <button className="action-btn share-btn">
                <Share2 className="action-icon" />
                <span>‡πÅ‡∏ä‡∏£‡πå</span>
              </button>
            </div>
          </div>
        ))}
      </div>

      <div className="community-stats">
        <div className="stat-item">
          <Heart className="stat-icon" />
          <div className="stat-content">
            <span className="stat-number">{posts.reduce((sum, post) => sum + post.likes, 0)}</span>
            <span className="stat-label">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
          </div>
        </div>
        
        <div className="stat-item">
          <MessageCircle className="stat-icon" />
          <div className="stat-content">
            <span className="stat-number">{posts.reduce((sum, post) => sum + post.comments, 0)}</span>
            <span className="stat-label">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô</span>
          </div>
        </div>
        
        <div className="stat-item">
          <Smile className="stat-icon" />
          <div className="stat-content">
            <span className="stat-number">{posts.length}</span>
            <span className="stat-label">‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CommunityBoard;
